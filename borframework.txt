Borframework.txt - BrailleOrch Software Framework

By Hu Haipeng

Date: Jan 31, 2016

Copyright (C) 2015 By Hu Haipeng <hhpcomposer@gmail.com> and Daniel Barich <barichd@kenyon.edu>
----------------------------------------

BrailleOrch is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.

BrailleOrch is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with BrailleOrch.  If not, see <http://www.gnu.org/licenses/>.

----------------------------------------
Contents
Purpose
Requirements
About BrailleOrch Format
Framework
Chapter 1: Menu Overview
File Menu
Edit Menu
View Menu
Navigation Menu
Transcription Menu
Braille Music Menu
Playback Menu
Options Menu
TBC
----------------------------------------

Purpose
This is a detailed framework of BrailleOrch, braille music transcription software for advanced publishing requirements. The final software will convert Musicxml files, or via a separate plugin, Sibelius files, into our extended Braille Music Markup Language (BMML) format (originally created and copyrighted by Veia Progetti s.r.l. [http://www.veia.it], Italy, as free software. See copyright information in the BMML package for details), which can be flexibly edited and modified, to fulfill most of the requirements of braille music publishment.

Since this software is free, and under GPL and Veia free software licenses, anyone who are willing to help us can join in to develop it. We welcome people around the world to do anything making convenience to braille music production for blind musicians.

Requirements
An experienced Python and XML knowledge is required for developing this software. Knowledge of music, braille and braille music is recommended, which will largely enhance the efficiency of development. Sibelius Manuscript Language is required if anyone wants to make a plugin for Sibelius. Some items in Sibelius can't be correctly exported into musicxml via its internal export function and/or Dolet For Sibelius plugin.

The software will run under any Microsoft Windows systems, from Windows 2000/XP to Windows 10, both 32 and 64 bits. A screen reader such as Jaws and NVDA is required for announcing unicode braille objects. Music publishers and sighted braille transcribers are not asked for this option.

About BrailleOrch Format
BrailleOrch (.bor) format is a compressed file. It contains original musicxml (if transcribed from musicxml) and bmml sources, and additional debugging information such as error records. When the final editing and correction has been finished, the musicxml source and most debugging information can be removed to save file size. People can still edit and reformat braille output, though. See Make final document in File Menu.

Framework
This comprehensive document will describe all menus and functions of BrailleOrch. People who wants to develop/enhance the software must read it carefully.

Chapter 1: Menu Overview
This chapter describes all menus and submenus. It gives us a brief view of the major functions of BrailleOrch.

File Menu
New
To create a new BMML document. This will not be considered currently, unless we decide to develop braille music composing side. Braille Music Editor 2 from Veia Project can do a intermediate level work of it, and blind musicians can now use ABC, Lilypond and Sibelius to produce print music scores. So our main goal is to develop a transcription software.

Open
Open a BMML file, both original Veia version and our extended new version. Our new version contains more information and functions, so for portability purpose, it will be a compressed xml file with the extension .bor.

Save
Save the current BMML file in either BMML or Bor format. The BMML format is not an old version of BMML, but an uncompressed Bor file. This can be used for researching the format to help developers get familiar with BMML.

Save As
Save the file using a different name or to a different location, in either BMML or Bor format.

Versioning (submenu)
Save Version
open Version
Versioning function is for further comparison of the score. The version files will be saved using .bor format, with a time/date stamp after the extension. E.G., foo.bor~01312016.
Saving an earlier version will bring up a dialog, asking whether you want to save a new version or overwrite the current non-version file.

Set copy protection
This is a special function for protecting music pubisher's copyright. After they convert their scores into musicxml and import into BrailleOrch, they can immediately set this option. The file can still be edited, reformatted and embossed, but can't be exported into musicxml for back-translation. The file is also encrypted, so it also can't be saved as bmml format. Any debugging process upon the xml source and bmml score can, however, be done using the internal debugging interface.
Be careful to use this function, since it's not reversable. We should provide two times of verification dialog for this. Another possibility is, we can toggle this item visible and invisible in the "Option" dialog, to prevent accidental operation by common users.

Make final document
Be careful to use it like Set copy protection. This will remove musicxml source and most debugging information from the file. So don't use it before the final correction of braille music is done, especially when there are errors. As I said before, the metadata will be protected using Set copy protection function, so the protected musicxml source can't be extracted. So don't worry about the source. After making the final document, people can still edit and reformat braille music score, but can't debug and make enhancement of the software.

Close
Close All
Close the current working document(s).

Import
Import Musicxml files, from version 1.0 to the latest version. The transcription process will begin, see Transcription for details.
Importing MIDI and ASCII/unicode braille texts will be considered in the future.

Export
Exports MIDI and Musicxml formats. This will be considered later.
Export to unicode or ASCII braille. This is the current function. When exporting to ASCII, an option dialog will appear for choosing braille tables. Different country uses different braille mapping table.

Page Setup
Settings for braille pages.
In this dialog:
Lines per page: line amount spin editbox, default 25
Cells per page: Cell amount spin editbox, default 32
Adding form feeds: checkbox for inserting form feeds
Running headers: some countries have running headers at the top of page. These headers are set inside the piece.
Print page numbers: checkbox, braille printing page numbers
Print page number position: listbox, topleft, topmiddle, topright, bottomleft, bottommiddle and bottomright.
Braille page numbers: checkbox, braille braille page numbers
Braille page number position: listbox, topleft, topmiddle, topright, bottomleft, bottommiddle and bottomright.
When these two positions get conflicted, a warning message will appear, asking the user to adjust the position correctly.

Emboss
Emboss braille music scores using installed braille embosser drivers.

Exit
Quit the software.

Edit Menu
Undo
Undo the previous operations.

Redo
Redo undone operations.

Undo history
A 128-step history list, to choose an undo item to roll back or forward.

Select all
Select all items.

Special selection (submenu)
Set begin of selection block (F5)
Set end of selection block (F6)
Set from begin to current location (F7)
Select from current location to end (F8)
Select line (F9)
(current braille line)
Select part (10)
(current part, for whole piece/movement)
select staff (F11)
(current staff)
Select system (F12)
(current system)
Remove selection (F4)
(remove the current selection. The selection will not be removed if this is pressed, or a new selection block is made.)

Cut/Copy/Paste/Delete
Cut/copy/paste/delete selection.

Search/replace
Common search/replace functions.
However, there's an checkbox to switch on "searching for texts", which switches of unicode braille input, and directly search within the xml sources for standard texts, including dynamics and any text-based values. The result will bring the cursor to correct braille location.

View Menu
The common view menu for sighted users. It includes simple view options such as zooming, visibility of toolbar, and braille reading modes etc.
Braille reading mode will give us options to choose white-screen-black-dots or black-screen-white/blue/green-dots.

Navigation Menu
Besides common arrow navigations of individual braille cells or lines, there are some special functions.

Next note (tab)
Previous note (shift+tab)
Next beat (alt+right)
Previous beat (alt+left)
Next measure (ctrl+right)
Previous measure (ctrl+left)
Next voice (win+right)
Previous voice (win+left)
Next part in the same measure (ctrl+down)
Previous part in the same measure (ctrl+up)
Next print line (alt+down)
Previous print line (alt+up)
Next braille system (win+down)
Previous braille system (win+up)
Next print system (ctrl+win+down)
Previous print system (ctrl+win+up)
Next braille page (pgdn)
Previous braille page (pgup)
Next print page (ctrl+pgdn)
Previous print page (ctrl+pgup)
Begin of current braille page (home)
End of current braille page (end)
Begin of current system (alt+home)
End of current system (alt+end)
Begin of file (ctrl+home)
End of file (ctrl+end)

Go to measure/part
Enter measure and part numbers. If measure number is left empty, then stay in the current measure; ff part number is left empty, then bring to the first part of the measure.

Go to selection (submenu)
Go to begin of selection (ctrl+F5)
Go to end of selection (Ctrl+F6)

Transcription Menu
This menu handles various transcription functions.

Bar-over-bar (default)
Line-over-line
Section-by-section
These 3 options will change the current format of score. We recommend people to set their preferred one as default in the option dialog, to reduce any messy formatting problems.
All detailed options for these formats can be found and will be discussed in the Option Dialog section.

Reformat
Reformat the braille score after manual editing and correction. Formatting layout will follow rules set in Options and Page setup dialogs. Options changed after transcription process can also be applied.

Extract parts
Extract parts for players/singers. A dialog appears, letting you check part(s) to extract. New .bor documents with only bmml sources for individual parts will be created. You can change the order of parts, or choose whether to extract parts as individual files or just one file shwing parts one by one. If "combin individual parts" is checked, the result file will generate a full score containing selected parts (this is useful for publishing choral scores containing vocal parts only).

Combine parts to score
A reversed operation of part extraction. A dialog appears, letting you add files and adjust their order. But the files must be the whole parts of the same piece, otherwise BrailleOrch will refuse to go ahead. BrailleOrch will first check the coincidence of time and measure among all parts, and shows a warning message telling which file(s) are unmatched. BrailleOrch will check coincidence according to the topmost file.

Braille Music Menu
This menu gives us several functions of editing and correcting braille music score. Some are very sophisticated functions.
TBC

Playback Menu
Play/stop
Play current measure
Play current part
Play current voice
Play metronome (default unchecked)

Options Menu
Options
Discussed in separate chapter.

Play sounds when navigating
Whether to lay MIDI sounds during cursor navigation. Default: checked.

Announce modes (submenu)
silent
Braille only
Objects only
Braille and objects (default)


----------------------------------------
notes From Scratch:
(All the following will be moved to their appropriate positions as the framework is being composed)
02/18/2016
We must set text combination/splitting functions, to set some words correctly. For example, something like ff-mf, must not using three word signs, but just one; or for very long words or expressions, we can split them to get correct line breaking. Only texts checked in the same measure and the same voice can be combined/splitted, so this function will look up all checked texts, and combine/split the appropriate ones.
